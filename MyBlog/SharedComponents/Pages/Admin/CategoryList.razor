@page "/admin/categories"
@using Data.Models.Interfaces
@using Data.Models.Models
@using SharedComponents.RazorComponents
@inject IBlogApi Api

<h3>Kategorie</h3>
<EditForm OnValidSubmit="Save" Model="Item">
    <DataAnnotationsValidator />
    <CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider" />
    <InputText @bind-Value="@Item.Name" />
    <ValidationMessage For="@(() => Item.Name)" />
    <button class="btn btn-success" type="submit">Zapisz</button>
</EditForm>
<ItemList Items="Items" DeleteEvent="@Delete" SelectEvent="@Select" TItemType="Category">
    <ItemTemplate>
        @{
            var item = context as Category;
            if (item != null)
            {
                @item.Name
            }
        }
    </ItemTemplate>
</ItemList>

@code {
    private List<Category> Items { get; set; } = new();
    public Category Item { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Items = (await Api.GetCategoriesAsync()) ?? new();
        await base.OnInitializedAsync();
    }

    private async Task Delete(Category category)
    {
        try
        {
            await Api.DeleteCategoryAsync(category.Id!);
            Items.Remove(category);
        }
        catch
        {
            // ignored
        }
    }

    private async Task Save()
    {
        try
        {
            await Api.SaveCategoryAsync(Item);
            if (!Items.Contains(Item))
            {
                Items.Add(Item);
            }

            Item = new Category();
        }
        catch
        {
            // ignored
        }
    }

    private Task Select(Category category)
    {
        try
        {
            Item = category;
        }
        catch
        {
            // ignored
        }

        return Task.CompletedTask;
    }
}
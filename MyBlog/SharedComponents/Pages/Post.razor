@page "/post/{id}"
@using Data.Models.Interfaces
@using Data.Models.Models
@using Markdig
@inject IBlogApi Api
@inject NavigationManager NavigationManager

@if(BlogPost != null)
{
    <PageTitle>@BlogPost.Title</PageTitle>
    <HeadContent>
        <meta property="og:title" content="@BlogPost.Title" />
        <meta property="og:description" content="@(new string(BlogPost.Text.Take(100).ToArray()))" />
        <meta property="og:image" content="@($"{NavigationManager.BaseUri}/pathtoanimage.png")" />
        <meta property="og:url" content="@NavigationManager.Uri" />
        <meta name="twitter:card" content="@(new string(BlogPost.Text.Take(100).ToArray()))" />
    </HeadContent>
    
    <h2>@BlogPost.Title</h2>
    @((MarkupString)Markdig.Markdown.ToHtml(BlogPost.Text, _pipeline))
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public string Id { get; set; }
    public BlogPost? BlogPost { get; set; }
    MarkdownPipeline _pipeline;
    
    protected override async Task OnInitializedAsync()
    {
        _pipeline = new MarkdownPipelineBuilder().UseEmojiAndSmiley().Build();
        BlogPost = await Api.GetBlogPostAsync(Id);
        await base.OnInitializedAsync();
    }
}